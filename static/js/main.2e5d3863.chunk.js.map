{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","input","handleChange","event","setState","target","value","clearInput","document","getElementById","placeholder","className","onClick","this","bind","autoFocus","onChange","id","source","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"0PA0CeA,G,mNArCbC,MAAQ,CACNC,MAAO,8xB,EAIPC,aAAe,SAACC,GAChB,EAAKC,SAAS,CACZH,MAAOE,EAAME,OAAOC,S,EAItBC,WAAa,WACX,EAAKH,SAAS,CACZH,MAAM,KAERO,SAASC,eAAe,QAAQC,YAAc,sB,uDAIhD,OACE,gCACI,oDACA,sBAAKC,UAAU,WAAf,UACI,+CACA,iDAEJ,wBAAQC,QAASC,KAAKN,WAAWO,KAAKD,MAAtC,mBACA,sBAAKF,UAAU,YAAf,UACI,0BAAUI,WAAS,EAACT,MAAOO,KAAKb,MAAMC,MAAOe,SAAUH,KAAKX,aAAaY,KAAKD,MAAOF,UAAU,aAAaM,GAAG,SAC/G,cAAC,IAAD,CAAeC,OAAQL,KAAKb,MAAMC,MAAOU,UAAU,sB,GA9B/CQ,IAAMC,YCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IACdvB,SAASC,eAAe,SAM1BY,K","file":"static/js/main.2e5d3863.chunk.js","sourcesContent":["import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport './App.css'\n\nclass App extends React.Component {\n  state = {\n    input: \"# Welcome to my React Markdown Previewer!  \\n## This is a sub heading...  \\n### And here's some other cool stuff:  \\nYou can make text **bold**... whoa!  \\nOr _italic_.  \\nOr... wait for it... **_both_**  \\n  \\nThere's also links.  \\nHere's the link to one of my other [projects](https://adyatand.github.io/Random_quote_generator/)  \\nClick [here](https://www.google.com) to visit Google.  \\nClick [here](https://www.youtube.com) to visit YouTube.  \\nThis is how you can make links to various web pages.  \\n  \\n- And of course there are lists.  \\n   - Some are bulleted.  \\n      - With different indentation levels.  \\n  \\n1. And then there are numbered lists too.  \\n1. Use just 1s if you want,  \\n1. to make numbered lists!.  \\n  \\nAnd last but not least, let's not forget  \\n> Block quotes!\"\n  }\n\n\n    handleChange = (event) => {\n    this.setState({\n      input: event.target.value\n    })\n  }\n\n    clearInput = () => {\n      this.setState({\n        input:\"\"\n      })\n      document.getElementById(\"text\").placeholder = \"Enter text here...\";\n    }\n\n  render() {\n    return (\n      <div>\n          <h1>Markdown Previewer</h1>\n          <div className=\"headings\">\n              <h2>Markdown Text</h2>\n              <h2>Preview Text</h2>\n          </div>\n          <button onClick={this.clearInput.bind(this)}>Clear</button>\n          <div className=\"container\">\n              <textarea autoFocus value={this.state.input} onChange={this.handleChange.bind(this)} className=\"inputField\" id=\"text\"></textarea>\n              <ReactMarkdown source={this.state.input} className=\"preview\" />\n          </div>\n      </div>\n\n    )\n  }\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}